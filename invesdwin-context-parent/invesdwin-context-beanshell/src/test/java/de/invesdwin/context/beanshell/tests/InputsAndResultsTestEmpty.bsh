getBooleanVector = putBooleanVector;
if(getBooleanVector.length != 0)
	throw new Exception("getBooleanVector not empty!");

getBooleanVectorAsList = putBooleanVectorAsList;
if(getBooleanVectorAsList.length != 0)
	throw new Exception("getBooleanVectorAsList not empty!");

getBooleanMatrix = putBooleanMatrix;
if(getBooleanMatrix.length != 0)
	throw new Exception("getBooleanMatrix not empty!");

getBooleanMatrixAsList = putBooleanMatrixAsList;
if(getBooleanMatrixAsList.length != 0)
	throw new Exception("getBooleanMatrixAsList not empty!");


getByteVector = putByteVector;
if(getByteVector.length != 0)
	throw new Exception("getByteVector not empty!");

getByteVectorAsList = putByteVectorAsList;
if(getByteVectorAsList.length != 0)
	throw new Exception("getByteVectorAsList not empty!");

getByteMatrix = putByteMatrix;
if(getByteMatrix.length != 0)
	throw new Exception("getByteMatrix not empty!");

getByteMatrixAsList = putByteMatrixAsList;
if(getByteMatrixAsList.length != 0)
	throw new Exception("getByteMatrixAsList not empty!");


getCharacterVector = putCharacterVector;
if(getCharacterVector.length != 0)
	throw new Exception("getCharacterVector not empty!");

getCharacterVectorAsList = putCharacterVectorAsList;
if(getCharacterVectorAsList.length != 0)
	throw new Exception("getCharacterVectorAsList not empty!");

getCharacterMatrix = putCharacterMatrix;
if(getCharacterMatrix.length != 0)
	throw new Exception("getCharacterMatrix not empty!");

getCharacterMatrixAsList = putCharacterMatrixAsList;
if(getCharacterMatrixAsList.length != 0)
	throw new Exception("getCharacterMatrixAsList not empty!");


getDecimalVector = putDecimalVector;
if(getDecimalVector.length != 0)
	throw new Exception("getDecimalVector not empty!");

getDecimalVectorAsList = putDecimalVectorAsList;
if(getDecimalVectorAsList.length != 0)
	throw new Exception("getDecimalVectorAsList not empty!");

getDecimalMatrix = putDecimalMatrix;
if(getDecimalMatrix.length != 0)
	throw new Exception("getDecimalMatrix not empty!");

getDecimalMatrixAsList = putDecimalMatrixAsList;
if(getDecimalMatrixAsList.length != 0)
	throw new Exception("getDecimalMatrixAsList not empty!");


getDoubleVector = putDoubleVector;
if(getDoubleVector.length != 0)
	throw new Exception("getDoubleVector not empty!");

getDoubleVectorAsList = putDoubleVectorAsList;
if(getDoubleVectorAsList.length != 0)
	throw new Exception("getDoubleVectorAsList not empty!");

getDoubleMatrix = putDoubleMatrix;
if(getDoubleMatrix.length != 0)
	throw new Exception("getDoubleMatrix not empty!");

getDoubleMatrixAsList = putDoubleMatrixAsList;
if(getDoubleMatrixAsList.length != 0)
	throw new Exception("getDoubleMatrixAsList not empty!");


getFloatVector = putFloatVector;
if(getFloatVector.length != 0)
	throw new Exception("getFloatVector not empty!");

getFloatVectorAsList = putFloatVectorAsList;
if(getFloatVectorAsList.length != 0)
	throw new Exception("getFloatVectorAsList not empty!");

getFloatMatrix = putFloatMatrix;
if(getFloatMatrix.length != 0)
	throw new Exception("getFloatMatrix not empty!");

getFloatMatrixAsList = putFloatMatrixAsList;
if(getFloatMatrixAsList.length != 0)
	throw new Exception("getFloatMatrixAsList not empty!");


getIntegerVector = putIntegerVector;
if(getIntegerVector.length != 0)
	throw new Exception("getIntegerVector not empty!");

getIntegerVectorAsList = putIntegerVectorAsList;
if(getIntegerVectorAsList.length != 0)
	throw new Exception("getIntegerVectorAsList not empty!");

getIntegerMatrix = putIntegerMatrix;
if(getIntegerMatrix.length != 0)
	throw new Exception("getIntegerMatrix not empty!");

getIntegerMatrixAsList = putIntegerMatrixAsList;
if(getIntegerMatrixAsList.length != 0)
	throw new Exception("getIntegerMatrixAsList not empty!");


getLongVector = putLongVector;
if(getLongVector.length != 0)
	throw new Exception("getLongVector not empty!");

getLongVectorAsList = putLongVectorAsList;
if(getLongVectorAsList.length != 0)
	throw new Exception("getLongVectorAsList not empty!");

getLongMatrix = putLongMatrix;
if(getLongMatrix.length != 0)
	throw new Exception("getLongMatrix not empty!");

getLongMatrixAsList = putLongMatrixAsList;
if(getLongMatrixAsList.length != 0)
	throw new Exception("getLongMatrixAsList not empty!");


getPercentVector = putPercentVector;
if(getPercentVector.length != 0)
	throw new Exception("getPercentVector not empty!");

getPercentVectorAsList = putPercentVectorAsList;
if(getPercentVectorAsList.length != 0)
	throw new Exception("getPercentVectorAsList not empty!");

getPercentMatrix = putPercentMatrix;
if(getPercentMatrix.length != 0)
	throw new Exception("getPercentMatrix not empty!");

getPercentMatrixAsList = putPercentMatrixAsList;
if(getPercentMatrixAsList.length != 0)
	throw new Exception("getPercentMatrixAsList not empty!");


getShortVector = putShortVector;
if(getShortVector.length != 0)
	throw new Exception("getShortVector not empty!");

getShortVectorAsList = putShortVectorAsList;
if(getShortVectorAsList.length != 0)
	throw new Exception("getShortVectorAsList not empty!");

getShortMatrix = putShortMatrix;
if(getShortMatrix.length != 0)
	throw new Exception("getShortMatrix not empty!");

getShortMatrixAsList = putShortMatrixAsList;
if(getShortMatrixAsList.length != 0)
	throw new Exception("getShortMatrixAsList not empty!");


getStringVector = putStringVector;
if(getStringVector.length != 0)
	throw new Exception("getStringVector not empty!");

getStringVectorAsList = putStringVectorAsList;
if(getStringVectorAsList.length != 0)
	throw new Exception("getStringVectorAsList not empty!");

getStringMatrix = putStringMatrix;
if(getStringMatrix.length != 0)
	throw new Exception("getStringMatrix not empty!");

getStringMatrixAsList = putStringMatrixAsList;
if(getStringMatrixAsList.length != 0)
	throw new Exception("getStringMatrixAsList not empty!");
