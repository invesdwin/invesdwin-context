<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.invesdwin</groupId>
	<artifactId>invesdwin-context-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>invesdwin-context</module>
		<module>invesdwin-context-integration</module>
		<module>invesdwin-context-integration-security</module>
		<module>invesdwin-context-webserver</module>
	</modules>

	<licenses>
		<license>
			<name>GNU Lesser General Public License (LGPL), Version 3.0</name>
			<url>http://www.gnu.org/licenses/lgpl-3.0.html</url>
		</license>
	</licenses>

	<properties>
		<version.invesdwin-context>1.0.0-SNAPSHOT</version.invesdwin-context>
	
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<version.compiler>1.8</version.compiler>

		<version.invesdwin-maven-plugin>1.0.0-SNAPSHOT</version.invesdwin-maven-plugin>
		<version.invesdwin-checkstyle-plugin>1.0.0</version.invesdwin-checkstyle-plugin>
		<version.maven-compiler-plugin>3.1</version.maven-compiler-plugin>
		<version.maven-source-plugin>2.2.1</version.maven-source-plugin>
		<version.build-helper-maven-plugin>1.8</version.build-helper-maven-plugin>
		<version.maven-processor-plugin>2.2.4</version.maven-processor-plugin>
		<!-- maven-jar-plugin 2.4 causes errors in eclipse: https://github.com/tesla/m2eclipse-extras/issues/10 -->
		<version.maven-jar-plugin>2.3.2</version.maven-jar-plugin>
		<version.maven-war-plugin>2.4</version.maven-war-plugin>
		<version.maven-bundle-plugin>2.4.0</version.maven-bundle-plugin>
		<version.maven-surefire-plugin>2.16</version.maven-surefire-plugin>
		<version.jaxb2-maven-plugin>1.5</version.jaxb2-maven-plugin>
		<version.maven-shade-plugin>2.1</version.maven-shade-plugin>
		<version.launch4j-maven-plugin>1.7.8</version.launch4j-maven-plugin>
		<version.maven-resources-plugin>2.6</version.maven-resources-plugin>
		<version.maven-checkstyle-plugin>2.10</version.maven-checkstyle-plugin>
		<version.maven-assembly-plugin>2.4</version.maven-assembly-plugin>
		<version.appassembler-maven-plugin>1.5</version.appassembler-maven-plugin>
		<version.maven-antrun-plugin>1.7</version.maven-antrun-plugin>
		<version.ant-contrib>1.0b3</version.ant-contrib>
		<version.ant-nodeps>1.8.1</version.ant-nodeps>
		<version.maven-enforcer-plugin>1.3.1</version.maven-enforcer-plugin>
		<version.maven-dependency-plugin>2.8</version.maven-dependency-plugin>
		<version.versions-maven-plugin>1.3.1</version.versions-maven-plugin>
		<version.lifecycle-mapping>1.0.0</version.lifecycle-mapping>
		<version.checkstyle>6.9</version.checkstyle>
		<version.replacer>1.5.3</version.replacer>
		<version.keytool-maven-plugin>1.5</version.keytool-maven-plugin>
		<version.license-check-maven-plugin>0.5.4-inv</version.license-check-maven-plugin>
		
		<version.invesdwin-bom>1.0.0-SNAPSHOT</version.invesdwin-bom>

		<version.jetty>9.0.6.v20130930</version.jetty>

		<version.querydsl>3.6.1</version.querydsl>
		<!-- querydsl-collections is still on 2.x -->
		<version.cglib>2.2.2</version.cglib>

		<version.ehcache-jcache>1.0.0</version.ehcache-jcache>
		<version.ehcache>2.8.5</version.ehcache>
		<version.jcache>1.0.0</version.jcache>
		<version.jboss-transaction-api_1.1_spec>1.0.1.Final</version.jboss-transaction-api_1.1_spec>

		<version.commons-configuration>1.9</version.commons-configuration>
		<version.commons-pool2>2.3</version.commons-pool2>
		<version.commons-compress>1.5</version.commons-compress>

		<version.spring-batch>3.0.5.RELEASE</version.spring-batch>
		<version.spring-retry>1.1.2.RELEASE</version.spring-retry>
		<version.spring-integration>4.2.3.RELEASE</version.spring-integration>
		<version.spring-ws>2.2.3.RELEASE</version.spring-ws>

		<version.logback>1.1.3</version.logback>
		<version.janino>2.7.8</version.janino>
		
		<version.h2>1.3.173</version.h2>
		<version.mysql-connector-java>5.1.31</version.mysql-connector-java>
		<version.postgresql>9.3-1102-jdbc41</version.postgresql>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-bom</artifactId>
				<version>${version.invesdwin-bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-context</artifactId>
				<version>${version.invesdwin-context}</version>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-context</artifactId>
				<version>${version.invesdwin-context}</version>
				<type>test-jar</type>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-context-integration</artifactId>
				<version>${version.invesdwin-context}</version>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-context-integration-security</artifactId>
				<version>${version.invesdwin-context}</version>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-context-webserver</artifactId>
				<version>${version.invesdwin-context}</version>
			</dependency>

			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-maven-plugin-util</artifactId>
				<version>${version.invesdwin-maven-plugin}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-client</artifactId>
				<version>${version.jetty}</version>
			</dependency>

			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-collections</artifactId>
				<version>${version.querydsl}</version>
				<exclusions>
					<exclusion>
						<artifactId>ecj</artifactId>
						<groupId>org.eclipse.jdt.core.compiler</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${version.cglib}</version>
			</dependency>

			<dependency>
				<groupId>org.ehcache</groupId>
				<artifactId>jcache</artifactId>
				<version>${version.ehcache-jcache}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.enterprise</groupId>
						<artifactId>cdi-api</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>ehcache-core</artifactId>
						<groupId>net.sf.ehcache</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${version.ehcache}</version>
			</dependency>
			<dependency>
				<groupId>javax.cache</groupId>
				<artifactId>cache-api</artifactId>
				<version>${version.jcache}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.transaction</groupId>
				<artifactId>jboss-transaction-api_1.1_spec</artifactId>
				<version>${version.jboss-transaction-api_1.1_spec}</version>
			</dependency>

			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${version.commons-configuration}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${version.commons-pool2}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${version.commons-compress}</version>
				<exclusions>
					<exclusion>
						<artifactId>xz</artifactId>
						<groupId>org.tukaani</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.batch</groupId>
				<artifactId>spring-batch-infrastructure</artifactId>
				<version>${version.spring-batch}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.retry</groupId>
				<artifactId>spring-retry</artifactId>
				<version>${version.spring-retry}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-core</artifactId>
				<version>${version.spring-integration}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-xml</artifactId>
				<version>${version.spring-integration}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>stax-api</artifactId>
						<groupId>javax.xml.stream</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.ws</groupId>
				<artifactId>spring-xml</artifactId>
				<version>${version.spring-ws}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.janino</groupId>
				<artifactId>janino</artifactId>
				<version>${version.janino}</version>
			</dependency>

			<dependency>
				<groupId>com.puppycrawl.tools</groupId>
				<artifactId>checkstyle</artifactId>
				<version>${version.checkstyle}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>tools</artifactId>
						<groupId>com.sun</groupId>
					</exclusion>
					<exclusion>
						<artifactId>google-collections</artifactId>
						<groupId>com.google.collections</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-cli</artifactId>
						<groupId>commons-cli</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${version.maven-shade-plugin}</version>
				<exclusions>
					<exclusion>
						<artifactId>maven-plugin-api</artifactId>
						<groupId>org.apache.maven</groupId>
					</exclusion>
					<exclusion>
						<artifactId>maven-model</artifactId>
						<groupId>org.apache.maven</groupId>
					</exclusion>
					<exclusion>
						<artifactId>maven-core</artifactId>
						<groupId>org.apache.maven</groupId>
					</exclusion>
					<exclusion>
						<artifactId>maven-compat</artifactId>
						<groupId>org.apache.maven</groupId>
					</exclusion>
					<exclusion>
						<artifactId>maven-artifact</artifactId>
						<groupId>org.apache.maven</groupId>
					</exclusion>
					<exclusion>
						<artifactId>plexus-container-default</artifactId>
						<groupId>org.codehaus.plexus</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm-commons</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>maven-dependency-tree</artifactId>
						<groupId>org.apache.maven.shared</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jdependency</artifactId>
						<groupId>org.vafer</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-checkstyle-plugin</artifactId>
				<version>${version.invesdwin-checkstyle-plugin}</version>
			</dependency>
			
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${version.h2}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${version.mysql-connector-java}</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${version.postgresql}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- test infrastructure classes (abstract tests and mocks) are in src/main/java 
			to prevent the need of -test module hell. These dependencies are in scope 
			provided for all submodules, so that compilation works with them, but running 
			a deployed application with those will fail -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- jpa drivers are required for running tests, but are not needed for 
			src/main/java compilation. Thus these dependencies are in scope test for 
			all submodules per default. The distribution will choose which driver to 
			actually deploy with a seperate dependency. -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>${basedir}/src/main/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>${basedir}/src/test/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>de.invesdwin</groupId>
					<artifactId>invesdwin-maven-plugin</artifactId>
					<version>${version.invesdwin-maven-plugin}</version>
					<executions>
						<execution>
							<goals>
								<goal>initialize</goal>
								<goal>generate-sources</goal>
								<goal>compile</goal>
							</goals>
							<configuration>
								<useInvesdwinEclipseSettings>true</useInvesdwinEclipseSettings>
								<codeComplianceLevel>${version.compiler}</codeComplianceLevel>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven-compiler-plugin}</version>
					<configuration>
						<source>${version.compiler}</source>
						<target>${version.compiler}</target>
						<complianceLevel>${version.compiler}</complianceLevel>
						<encoding>${file.encoding}</encoding>
						<compilerArgument>-proc:none</compilerArgument>
						<Xlint>ignore</Xlint>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${version.maven-source-plugin}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>${version.maven-processor-plugin}</version>
					<executions>
						<execution>
							<id>process</id>
							<goals>
								<goal>process</goal>
							</goals>
							<phase>generate-sources</phase>
							<configuration>
								<outputDirectory>${project.build.directory}/generated-sources/apt</outputDirectory>
								<failOnError>false</failOnError>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${version.build-helper-maven-plugin}</version>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>target/generated-sources/apt</source>
									<source>target/generated-sources/invesdwin</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.maven-jar-plugin}</version>
					<executions>
						<execution>
							<id>default-jar</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<execution>
							<id>test-jar</id>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<archive>
							<index>true</index>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.maven-war-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${version.maven-bundle-plugin}</version>
					<extensions>true</extensions>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<supportedProjectTypes>
							<supportedProjectType>jar</supportedProjectType>
							<supportedProjectType>bundle</supportedProjectType>
							<supportedProjectType>war</supportedProjectType>
						</supportedProjectTypes>
						<instructions>
							<Private-Package>.*.internal.*</Private-Package>
							<Export-Package>!.*.internal.*, *</Export-Package>
							<Import-Package>*</Import-Package>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.maven-surefire-plugin}</version>
					<configuration>
						<!-- timeout test suite of any module if it takes longer than 30 minutes -->
						<forkCount>1</forkCount>
						<reuseForks>true</reuseForks>
						<forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>
						<!-- Assertions make jforex fail in unit tests even if they normally 
							should not fail. To be safe about this regarding any framework, assertions 
							are disabled by default here. -->
						<enableAssertions>false</enableAssertions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jaxb2-maven-plugin</artifactId>
					<version>${version.jaxb2-maven-plugin}</version>
					<executions>
						<execution>
							<id>xjc-invesdwin</id>
							<goals>
								<goal>xjc</goal>
							</goals>
							<configuration>
								<failOnNoSchemas>false</failOnNoSchemas>
								<extension>true</extension>
								<!-- defining invesdwin default here, use custom execution configuration 
									for special cases -->
								<schemaDirectory>${project.basedir}/src/main/java/META-INF/xsd</schemaDirectory>
								<bindingDirectory>${project.basedir}/.settings</bindingDirectory>
								<bindingFiles>invesdwin.xjb</bindingFiles>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- distributions can use this plugin in profiles to customize properties 
						for different environments -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.maven-resources-plugin}</version>
				</plugin>
				<plugin>
					<!-- distributions need to add this plugin manually to build a uber-jar -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${version.maven-shade-plugin}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>de.invesdwin</groupId>
							<artifactId>invesdwin-maven-plugin</artifactId>
							<version>${version.invesdwin-maven-plugin}</version>
						</dependency>
					</dependencies>
					<configuration>
						<shadedArtifactAttached>true</shadedArtifactAttached>
						<shadedClassifierName>standalone</shadedClassifierName>
						<transformers>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer" />
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.PluginXmlResourceTransformer" />
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
								<resource>META-INF/spring.handlers</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
								<resource>META-INF/spring.schemas</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
								<resource>META-INF/spring.tooling</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
								<resource>META-INF/spring.factories</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
								<resource>META-INF/cxf/bus-extensions.txt</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
								<resource>META-INF/mime.types</resource>
							</transformer>
							<transformer
								implementation="de.invesdwin.maven.plugin.shade.WebFragmentTransformer">
								<resource>META-INF/web-fragment.xml</resource>
							</transformer>
							<transformer
								implementation="de.invesdwin.maven.plugin.shade.WebFragmentTransformer">
								<resource>META-INF/web/web-fragment.xml</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
								<resource>META-INF/aop.xml</resource>
							</transformer>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
								<resource>META-INF/wsdl.plugin.xml</resource>
							</transformer>
						</transformers>
						<filters>
							<filter>
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
								</excludes>
							</filter>
						</filters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.akathist.maven.plugins.launch4j</groupId>
					<artifactId>launch4j-maven-plugin</artifactId>
					<version>${version.launch4j-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${version.maven-checkstyle-plugin}</version>
					<configuration>
						<configLocation>${basedir}/.settings/checkstyle.config.xml</configLocation>
						<propertiesLocation>${basedir}/.settings/checkstyle.config.properties</propertiesLocation>
					</configuration>
					<dependencies>
						<dependency>
							<!-- needs custom checks -->
							<groupId>de.invesdwin</groupId>
							<artifactId>invesdwin-checkstyle-plugin</artifactId>
							<version>${version.invesdwin-checkstyle-plugin}</version>
						</dependency>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${version.checkstyle}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.maven-assembly-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<version>${version.appassembler-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${version.maven-antrun-plugin}</version>
					<dependencies>
						<dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>${version.ant-contrib}</version>
							<exclusions>
								<exclusion>
									<groupId>ant</groupId>
									<artifactId>ant</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-nodeps</artifactId>
							<version>${version.ant-nodeps}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.maven-enforcer-plugin}</version>
					<executions>
						<execution>
							<id>enforce-banned-dependencies</id>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<fail>true</fail>
						<failFast>true</failFast>
						<rules>
							<requireJavaVersion>
								<version>[${version.compiler},)</version>
							</requireJavaVersion>
							<requireMavenVersion>
								<version>[3.0,)</version>
							</requireMavenVersion>
							<bannedDependencies>
								<excludes>
									<exclude>commons-logging:commons-logging</exclude>
									<exclude>org.aspectj:aspectjrt</exclude>
									<exclude>javax.servlet:servlet-api</exclude>
									<exclude>org.apache.geronimo.specs:geronimo-jaxb_2.1_spec</exclude>
									<exclude>commons-logging:commons-logging-api</exclude>
									<exclude>javax.persistence:persistence-api</exclude>
									<exclude>log4j:log4j</exclude>
									<exclude>org.slf4j:slf4j-log4j12</exclude>
									<exclude>javax.servlet.jsp:jsp-api</exclude>
									<exclude>net.sf.ehcache:ehcache-core</exclude>
									<exclude>javax.transaction:jta</exclude>
									<exclude>org.fusesource.leveldbjni:leveldbjni-all</exclude>
									<exclude>javax.enterprise:cdi-api</exclude>
									<exclude>net.jcip:jcip-annotations</exclude>
									<exclude>org.glassfish:javax.servlet</exclude>
									<exclude>org.hibernate:hibernate-c3p0</exclude>
									<exclude>org.hibernate.javax.persistence:hibernate-jpa-2.0-api</exclude>
									<exclude>javassist:javassist</exclude>
									<exclude>org.codehaus.jackson:jackson-core-asl</exclude>
									<exclude>org.codehaus.jackson:jackson-mapper-asl</exclude>
								</excludes>
							</bannedDependencies>
							<requireUpperBoundDeps />
							<!-- requireUpperBoundDeps is enough for multi projects <dependencyConvergence 
								/> -->
						</rules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${version.maven-dependency-plugin}</version>
					<configuration>
						<!-- just warn, since there might be legitimate reasons -->
						<failOnWarning>false</failOnWarning>
						<ignoreNonCompile>true</ignoreNonCompile>
					</configuration>
					<executions>
						<execution>
							<id>process-test-classes-dependency-analyze</id>
							<phase>process-test-classes</phase>
							<goals>
								<goal>analyze-only</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${version.versions-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
					<artifactId>replacer</artifactId>
					<version>${version.replacer}</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>replace</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<basedir>${basedir}</basedir>
						<includes>
							<include>src/**/*.properties</include>
						</includes>
						<encoding>ISO-8859-1</encoding>
						<replacements>
							<replacement>
								<token>Ä</token>
								<value>\\u00C4</value>
							</replacement>
							<replacement>
								<token>ä</token>
								<value>\\u00E4</value>
							</replacement>
							<replacement>
								<token>Ö</token>
								<value>\\u00D6</value>
							</replacement>
							<replacement>
								<token>ö</token>
								<value>\\u00F6</value>
							</replacement>
							<replacement>
								<token>Ü</token>
								<value>\\u00DC</value>
							</replacement>
							<replacement>
								<token>ü</token>
								<value>\\u00FC</value>
							</replacement>
							<replacement>
								<token>ß</token>
								<value>\\u00DF</value>
							</replacement>
						</replacements>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>keytool-maven-plugin</artifactId>
					<version>${version.keytool-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.complykit</groupId>
					<artifactId>license-check-maven-plugin</artifactId>
					<version>${version.license-check-maven-plugin}</version>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>os-check</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<blacklist>
							<param>agpl-1.0</param>
							<param>agpl-2.0</param>
							<param>agpl-3.0</param>
							<param>gpl-1.0</param>
							<param>gpl-2.0</param>
							<param>gpl-3.0</param>
						</blacklist>
						<excludesRegex>
							<!-- apache license -->
							<param>org\.apache.*</param>
							<param>cglib.*</param>
							<param>joda-time.*</param>
							<param>javax\.jdo.*</param>
							<param>org\.jasig\.cas.*</param>
							<!-- MIT license -->
							<param>org\.slf4j.*</param>
							<param>org\.bouncycastle.*</param>
							<!-- bsd license -->
							<param>org\.postgresql.*</param>
							<param>org\.codehaus\.janino.*</param>
							<param>org.jquantlib.*</param>
							<param>ta-lib:ta-lib.*</param>
							<!-- epl license -->
							<param>com\.h2database.*</param>
							<!-- LGPL license -->
							<param>org\.jboss\.logging:jboss-logging-generator.*</param>
							<param>org\.hibernate.*</param>
							<param>net\.sourceforge.mydoggy.*</param>
							<param>it\.tidalwave\.betterbeansbinding.*</param>
							<param>org\.jdesktop\.bsaf.*</param>
							<param>org\.swinglabs:swingx.*</param>
							<param>com\.toedter:jcalendar.*</param>
							<param>net\.sourceforge\.dynamicreports.*</param>
							<param>net\.sf\.jasperreports.*</param>
							<param>org\.jfree:jfreechart.*</param>
							<param>OpenForecast:OpenForecast.*</param>
							<param>7zip:7zip.*</param>
							<param>net.sf.jpcapng:jpcapng.*</param>
							<!-- CDDL -->
							<param>javax\.mail:mail.*</param>
							<param>javax\.xml\.bind:jaxb.*</param>
							<!-- CPL -->
							<param>wsdl4j.*</param>
							<!-- GPL with classpath exception -->
							<param>com\.jidesoft:jide-oss.*</param>
							<param>org\.glassfish\.jersey.*</param>
							<!-- public domain -->
							<param>org\.freedesktop\.tango.*</param>
							<!-- MPL -->
							<param>org\.javassist.*</param>
							<!-- EPL -->
							<param>org\.jvnet\.hudson.*</param>
							<!-- modified bsd license -->
							<param>com\.jamonapi.*</param>
							<!-- not everything is open sourced -->
							<param>de\.invesdwin.*</param>
							<!-- WARNING: CCA 2.5 license, you need to put a link to this when 
								using the icons -->
							<param>com\.famfamfam:silk.*</param>
							<!-- WARNING: gpl license, just a test dependency, you need to buy 
								a license when using in a commercial application -->
							<param>mysql.*</param>
							<!-- WARNING: commercial license bound to broker account, not for 
								free use -->
							<param>com\.dukascopy.*</param>
							<!-- WARNING: optional, you need to buy a license to use this dependency -->
							<param>org\.webjars:highstock.*</param>
							<!-- WARNING: commercial license needs to be bought -->
							<param>com\.nj4x:jfx.*</param>
						</excludesRegex>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${version.lifecycle-mapping}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-plugin-plugin
										</artifactId>
										<versionRange>
											[3.2,)
										</versionRange>
										<goals>
											<goal>descriptor</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>analyze-only</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.google.code.maven-replacer-plugin
										</groupId>
										<artifactId>
											replacer
										</artifactId>
										<versionRange>
											[1.5.3,)
										</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>de.invesdwin</groupId>
				<artifactId>invesdwin-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
			</plugin>
			<plugin>
				<groupId>org.complykit</groupId>
				<artifactId>license-check-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${version.maven-checkstyle-plugin}</version>
				<configuration>
					<configLocation>${basedir}/.settings/checkstyle.config.xml</configLocation>
					<propertiesLocation>${basedir}/.settings/checkstyle.config.properties</propertiesLocation>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
		<repository>
			<id>central</id>
			<name>invesdwin.de-releases</name>
			<url>http://invesdwin.de/artifactory/invesdwin-oss</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>invesdwin.de-snapshots</name>
			<url>http://invesdwin.de/artifactory/invesdwin-oss</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>invesdwin-oss</id>
			<url>http://invesdwin.de/artifactory/invesdwin-oss</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>invesdwin-oss</id>
			<url>http://invesdwin.de/artifactory/invesdwin-oss</url>
		</pluginRepository>
	</pluginRepositories>

</project>
