# How long connections may wait on connect and read maximum
de.invesdwin.context.ContextProperties.DEFAULT_NETWORK_TIMEOUT=30 SECONDS
# Disable setting the DEFAULT_NETWORK_TIMEOUT system properties
#de.invesdwin.context.ContextProperties.DEFAULT_NETWORK_TIMEOUT_SKIP_SYSTEM_PROPERTIES=true
# you can override the cpu thread pool count (which is per default the amount of available cores) by setting this property
#de.invesdwin.context.ContextProperties.CPU_THREAD_POOL_COUNT=
# set to true to ignore the application bundled distribution.properties
#de.invesdwin.context.ContextProperties.IGNORE_DISTRIBUTION_PROPERTIES=false
# set to true to enable conscrypt security provider, default false
#de.invesdwin.context.ContextProperties.CONSCRYPT_SECURITY_PROVIDER_ENABLED=false
# set to true to enable amazon corretto security provider, default false
#de.invesdwin.context.ContextProperties.AMAZON_CORRETTO_SECURITY_PROVIDER_ENABLED=false
# set to true to enable wildfly openssl security provider, default false
#de.invesdwin.context.ContextProperties.WILDFLY_OPENSSL_SECURITY_PROVIDER_ENABLED=false
# set to true to enable bouncy castle security provider, default false
#de.invesdwin.context.ContextProperties.BOUNCY_CASTLE_SECURITY_PROVIDER_ENABLED=false
# set this property to override the home data directory (e.g. to storage data on a different drive)
#de.invesdwin.context.ContextProperties.HOME_DATA_DIR_OVERRIDE=D:\\InvesdwinData
# set this property to also redirect the temp directory
#de.invesdwin.instrument.DynamicInstrumentationProperties.TEMP_DIRECTORY_OVERRIDE=D:\\InvesdwinData\\temp
# set this property to disable bounds checks for byte buffers for a little additional performance 
#  though wrong programming by not checking buffer.capacity() is punished by jvm crashes
#  this setting gets automatically disabled when "Throwables.isDebugStackTraces() == true"
#  we keep bounds checks enabled per default to prevent attacks that exceed bound limits to crash the JVM (thus for security purposes we should keep this enabled)
#agrona.disable.bounds.checks=true
#io.netty.buffer.checkBounds=false
# this enables some low level optimizations in netty (if --add-opens java.base/jdk.internal.misc=ALL-UNNAMED is used)
io.netty.tryReflectionSetAccessible=true
# set this property to override the automatic detection of the scale factor and use a specified value instead. 
# Though on linux try xsettings instead: https://bugs.kde.org/show_bug.cgi?id=442901#c18
#de.invesdwin.context.ContextProperties.HIDPI_SCALE_FACTOR=2.0
# set to true to always see stacktraces without performance optimizations via command line: -Dde.invesdwin.util.error.Throwables.DEBUG_STACK_TRACE_ENABLED=true
#de.invesdwin.util.error.Throwables.DEBUG_STACK_TRACE_ENABLED=true
#uncomment this to disable FST deep clone provider (if it causes problems) to keep the jdk default serialization as the deep clone provider
#de.invesdwin.context.ContextProperties.KEEP_JDK_DEEP_CLONE_PROVIDER=true
# prevent org.springframework.test.context.cache.DefaultContextCache from closing testContexts based on size
# our TestContextLoader forces an entry per test class and manages which test context should be closed when by itself instead
spring.test.context.cache.maxSize=2147483647
