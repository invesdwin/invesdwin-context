println "getByte"
if isNothing getByte 
then error "getByte already defined!"
else return ()
{-
var getByte = putByte;
var getByteType = getByte.getClass();
println getByteType
println getByte
if getByteType != Byte.class then
	error "getByte not Byte!"
else return ()

println "getByteVector"
if isNothing getByteVector then
	error "getByteVector already defined!"
else return ()
var getByteVector = putByteVector;
var getByteVectorType = getByteVector.getClass().getComponentType();
println getByteVectorType
println getByteVector
if getByteVectorType != byte.class then
	error "getByteVector not Byte!"
else return ()

println "getByteVectorAsList"
if isNothing getByteVectorAsList then
	error "getByteVectorAsList already defined!"
else return ()
var getByteVectorAsList = putByteVectorAsList;
var getByteVectorAsListType = getByteVectorAsList.getClass().getComponentType();
println getByteVectorAsListType
println getByteVectorAsList
if getByteVectorAsListType != byte.class then
	error "getByteVectorAsList not Byte!"
else return ()

println "getByteMatrix"
if isNothing getByteMatrix then
	error "getByteMatrix already defined!"
else return ()
var getByteMatrix = putByteMatrix;
var getByteMatrixType = getByteMatrix[0].getClass().getComponentType();
println getByteMatrixType
println getByteMatrix
if getByteMatrixType != byte.class then
	error "getByteMatrix not Byte!"
else return ()

println "getByteMatrixAsList"
if isNothing getByteMatrixAsList then
	error "getByteMatrixAsList already defined!");
else return ()
var getByteMatrixAsList = putByteMatrixAsList;
var getByteMatrixAsListType = getByteMatrixAsList[0].getClass().getComponentType();
println getByteMatrixAsListType
println getByteMatrixAsList
if getByteMatrixAsListType != byte.class then
	error "getByteMatrixAsList not Byte!"
else return ()
-}