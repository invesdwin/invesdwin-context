(def getBooleanVector (callback "getBooleanVector"))
(if-not (= (count getBooleanVector) 0)
	(throw (Exception. "getBooleanVector not empty!"))
)
(callback "setBooleanVector" getBooleanVector)

(def getBooleanVectorAsList (callback "getBooleanVectorAsList"))
(if-not (= (count getBooleanVectorAsList) 0)
	(throw (Exception. "getBooleanVectorAsList not empty!"))
)
(callback "setBooleanVectorAsList" getBooleanVectorAsList)

(def getBooleanMatrix (callback "getBooleanMatrix"))
(if-not (= (count getBooleanMatrix) 0)
	(throw (Exception. "getBooleanMatrix not empty!"))
)
(callback "setBooleanMatrix" getBooleanMatrix)

(def getBooleanMatrixAsList (callback "getBooleanMatrixAsList"))
(if-not (= (count getBooleanMatrixAsList) 0)
	(throw (Exception. "getBooleanMatrixAsList not empty!"))
)
(callback "setBooleanMatrixAsList" getBooleanMatrixAsList)


(def getByteVector (callback "getByteVector"))
(if-not (= (count getByteVector) 0)
	(throw (Exception. "getByteVector not empty!"))
)
(callback "setByteVector" getByteVector)

(def getByteVectorAsList (callback "getByteVectorAsList"))
(if-not (= (count getByteVectorAsList) 0)
	(throw (Exception. "getByteVectorAsList not empty!"))
)
(callback "setByteVectorAsList" getByteVectorAsList)

(def getByteMatrix (callback "getByteMatrix"))
(if-not (= (count getByteMatrix) 0)
	(throw (Exception. "getByteMatrix not empty!"))
)
(callback "setByteMatrix" getByteMatrix)

(def getByteMatrixAsList (callback "getByteMatrixAsList"))
(if-not (= (count getByteMatrixAsList) 0)
	(throw (Exception. "getByteMatrixAsList not empty!"))
)
(callback "setByteMatrixAsList" getByteMatrixAsList)


(def getCharacterVector (callback "getCharacterVector"))
(if-not (= (count getCharacterVector) 0)
	(throw (Exception. "getCharacterVector not empty!"))
)
(callback "setCharacterVector" getCharacterVector)

(def getCharacterVectorAsList (callback "getCharacterVectorAsList"))
(if-not (= (count getCharacterVectorAsList) 0)
	(throw (Exception. "getCharacterVectorAsList not empty!"))
)
(callback "setCharacterVectorAsList" getCharacterVectorAsList)

(def getCharacterMatrix (callback "getCharacterMatrix"))
(if-not (= (count getCharacterMatrix) 0)
	(throw (Exception. "getCharacterMatrix not empty!"))
)
(callback "setCharacterMatrix" getCharacterMatrix)

(def getCharacterMatrixAsList (callback "getCharacterMatrixAsList"))
(if-not (= (count getCharacterMatrixAsList) 0)
	(throw (Exception. "getCharacterMatrixAsList not empty!"))
)
(callback "setCharacterMatrixAsList" getCharacterMatrixAsList)


(def getDecimalVector (callback "getDecimalVector"))
(if-not (= (count getDecimalVector) 0)
	(throw (Exception. "getDecimalVector not empty!"))
)
(callback "setDecimalVector" getDecimalVector)

(def getDecimalVectorAsList (callback "getDecimalVectorAsList"))
(if-not (= (count getDecimalVectorAsList) 0)
	(throw (Exception. "getDecimalVectorAsList not empty!"))
)
(callback "setDecimalVectorAsList" getDecimalVectorAsList)

(def getDecimalMatrix (callback "getDecimalMatrix"))
(if-not (= (count getDecimalMatrix) 0)
	(throw (Exception. "getDecimalMatrix not empty!"))
)
(callback "setDecimalMatrix" getDecimalMatrix)

(def getDecimalMatrixAsList (callback "getDecimalMatrixAsList"))
(if-not (= (count getDecimalMatrixAsList) 0)
	(throw (Exception. "getDecimalMatrixAsList not empty!"))
)
(callback "setDecimalMatrixAsList" getDecimalMatrixAsList)


(def getDoubleVector (callback "getDoubleVector"))
(if-not (= (count getDoubleVector) 0)
	(throw (Exception. "getDoubleVector not empty!"))
)
(callback "setDoubleVector" getDoubleVector)

(def getDoubleVectorAsList (callback "getDoubleVectorAsList"))
(if-not (= (count getDoubleVectorAsList) 0)
	(throw (Exception. "getDoubleVectorAsList not empty!"))
)
(callback "setDoubleVectorAsList" getDoubleVectorAsList)

(def getDoubleMatrix (callback "getDoubleMatrix"))
(if-not (= (count getDoubleMatrix) 0)
	(throw (Exception. "getDoubleMatrix not empty!"))
)
(callback "setDoubleMatrix" getDoubleMatrix)

(def getDoubleMatrixAsList (callback "getDoubleMatrixAsList"))
(if-not (= (count getDoubleMatrixAsList) 0)
	(throw (Exception. "getDoubleMatrixAsList not empty!"))
)
(callback "setDoubleMatrixAsList" getDoubleMatrixAsList)


(def getFloatVector (callback "getFloatVector"))
(if-not (= (count getFloatVector) 0)
	(throw (Exception. "getFloatVector not empty!"))
)
(callback "setFloatVector" getFloatVector)

(def getFloatVectorAsList (callback "getFloatVectorAsList"))
(if-not (= (count getFloatVectorAsList) 0)
	(throw (Exception. "getFloatVectorAsList not empty!"))
)
(callback "setFloatVectorAsList" getFloatVectorAsList)

(def getFloatMatrix (callback "getFloatMatrix"))
(if-not (= (count getFloatMatrix) 0)
	(throw (Exception. "getFloatMatrix not empty!"))
)
(callback "setFloatMatrix" getFloatMatrix)

(def getFloatMatrixAsList (callback "getFloatMatrixAsList"))
(if-not (= (count getFloatMatrixAsList) 0)
	(throw (Exception. "getFloatMatrixAsList not empty!"))
)
(callback "setFloatMatrixAsList" getFloatMatrixAsList)


(def getIntegerVector (callback "getIntegerVector"))
(if-not (= (count getIntegerVector) 0)
	(throw (Exception. "getIntegerVector not empty!"))
)
(callback "setIntegerVector" getIntegerVector)

(def getIntegerVectorAsList (callback "getIntegerVectorAsList"))
(if-not (= (count getIntegerVectorAsList) 0)
	(throw (Exception. "getIntegerVectorAsList not empty!"))
)
(callback "setIntegerVectorAsList" getIntegerVectorAsList)

(def getIntegerMatrix (callback "getIntegerMatrix"))
(if-not (= (count getIntegerMatrix) 0)
	(throw (Exception. "getIntegerMatrix not empty!"))
)
(callback "setIntegerMatrix" getIntegerMatrix)

(def getIntegerMatrixAsList (callback "getIntegerMatrixAsList"))
(if-not (= (count getIntegerMatrixAsList) 0)
	(throw (Exception. "getIntegerMatrixAsList not empty!"))
)
(callback "setIntegerMatrixAsList" getIntegerMatrixAsList)


(def getLongVector (callback "getLongVector"))
(if-not (= (count getLongVector) 0)
	(throw (Exception. "getLongVector not empty!"))
)
(callback "setLongVector" getLongVector)

(def getLongVectorAsList (callback "getLongVectorAsList"))
(if-not (= (count getLongVectorAsList) 0)
	(throw (Exception. "getLongVectorAsList not empty!"))
)
(callback "setLongVectorAsList" getLongVectorAsList)

(def getLongMatrix (callback "getLongMatrix"))
(if-not (= (count getLongMatrix) 0)
	(throw (Exception. "getLongMatrix not empty!"))
)
(callback "setLongMatrix" getLongMatrix)

(def getLongMatrixAsList (callback "getLongMatrixAsList"))
(if-not (= (count getLongMatrixAsList) 0)
	(throw (Exception. "getLongMatrixAsList not empty!"))
)
(callback "setLongMatrixAsList" getLongMatrixAsList)


(def getPercentVector (callback "getPercentVector"))
(if-not (= (count getPercentVector) 0)
	(throw (Exception. "getPercentVector not empty!"))
)
(callback "setPercentVector" getPercentVector)

(def getPercentVectorAsList (callback "getPercentVectorAsList"))
(if-not (= (count getPercentVectorAsList) 0)
	(throw (Exception. "getPercentVectorAsList not empty!"))
)
(callback "setPercentVectorAsList" getPercentVectorAsList)

(def getPercentMatrix (callback "getPercentMatrix"))
(if-not (= (count getPercentMatrix) 0)
	(throw (Exception. "getPercentMatrix not empty!"))
)
(callback "setPercentMatrix" getPercentMatrix)

(def getPercentMatrixAsList (callback "getPercentMatrixAsList"))
(if-not (= (count getPercentMatrixAsList) 0)
	(throw (Exception. "getPercentMatrixAsList not empty!"))
)
(callback "setPercentMatrixAsList" getPercentMatrixAsList)


(def getShortVector (callback "getShortVector"))
(if-not (= (count getShortVector) 0)
	(throw (Exception. "getShortVector not empty!"))
)
(callback "setShortVector" getShortVector)

(def getShortVectorAsList (callback "getShortVectorAsList"))
(if-not (= (count getShortVectorAsList) 0)
	(throw (Exception. "getShortVectorAsList not empty!"))
)
(callback "setShortVectorAsList" getShortVectorAsList)

(def getShortMatrix (callback "getShortMatrix"))
(if-not (= (count getShortMatrix) 0)
	(throw (Exception. "getShortMatrix not empty!"))
)
(callback "setShortMatrix" getShortMatrix)

(def getShortMatrixAsList (callback "getShortMatrixAsList"))
(if-not (= (count getShortMatrixAsList) 0)
	(throw (Exception. "getShortMatrixAsList not empty!"))
)
(callback "setShortMatrixAsList" getShortMatrixAsList)


(def getStringVector (callback "getStringVector"))
(if-not (= (count getStringVector) 0)
	(throw (Exception. "getStringVector not empty!"))
)
(callback "setStringVector" getStringVector)

(def getStringVectorAsList (callback "getStringVectorAsList"))
(if-not (= (count getStringVectorAsList) 0)
	(throw (Exception. "getStringVectorAsList not empty!"))
)
(callback "setStringVectorAsList" getStringVectorAsList)

(def getStringMatrix (callback "getStringMatrix"))
(if-not (= (count getStringMatrix) 0)
	(throw (Exception. "getStringMatrix not empty!"))
)
(callback "setStringMatrix" getStringMatrix)

(def getStringMatrixAsList (callback "getStringMatrixAsList"))
(if-not (= (count getStringMatrixAsList) 0)
	(throw (Exception. "getStringMatrixAsList not empty!"))
)
(callback "setStringMatrixAsList" getStringMatrixAsList)
