System.out.println("getByte");
if(binding.containsKey("getByte"))
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByte already defined!"));
var getByte = callback("getByte", []);
var getByteType = getByte.getClass();
System.out.println(getByteType);
System.out.println(getByte);
if(getByteType != Byte)
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByte not Byte!"));
callback("setByte",[getByte]);

System.out.println("getByteVector");
if(binding.containsKey("getByteVector"))
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteVector already defined!"));
var getByteVector = callback("getByteVector",[]);
var getByteVectorType = getByteVector.getClass().getComponentType();
System.out.println(getByteVectorType);
System.out.println(getByteVector);
if(getByteVectorType != byte)
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteVector not Byte!"));
callback("setByteVector",[getByteVector]);

System.out.println("getByteVectorAsList");
if(binding.containsKey("getByteVectorAsList"))
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteVectorAsList already defined!"));
var getByteVectorAsList = callback("getByteVectorAsList",[]);
var getByteVectorAsListType = getByteVectorAsList.getClass().getComponentType();
System.out.println(getByteVectorAsListType);
System.out.println(getByteVectorAsList);
if(getByteVectorAsListType != byte)
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteVectorAsList not Byte!"));
callback("setByteVectorAsList",[getByteVectorAsList]);

System.out.println("getByteMatrix");
if(binding.containsKey("getByteMatrix"))
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteMatrix already defined!"));
var getByteMatrix = callback("getByteMatrix",[]);
var getByteMatrixType = getByteMatrix[0].getClass().getComponentType();
System.out.println(getByteMatrixType);
System.out.println(getByteMatrix);
if(getByteMatrixType != byte)
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteMatrix not Byte!"));
callback("setByteMatrix",[getByteMatrix]);

System.out.println("getByteMatrixAsList");
if(binding.containsKey("getByteMatrixAsList"))
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteMatrixAsList already defined!"));
var getByteMatrixAsList = callback("getByteMatrixAsList",[]);
var getByteMatrixAsListType = getByteMatrixAsList[0].getClass().getComponentType();
System.out.println(getByteMatrixAsListType);
System.out.println(getByteMatrixAsList);
if(getByteMatrixAsListType != byte)
	de.invesdwin.util.error.Throwables.propagate(new Exception("getByteMatrixAsList not Byte!"));
callback("setByteMatrixAsList",[getByteMatrixAsList]);
