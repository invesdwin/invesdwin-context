val getBooleanVector: Array[Boolean] = callback("getBooleanVector")
if(getBooleanVector != null)
	throw new Exception("getBooleanVector not null!")
callback("setBooleanVector",getBooleanVector)
val getBooleanVectorAsList: Array[Boolean] = callback("getBooleanVectorAsList")
if(getBooleanVectorAsList != null)
	throw new Exception("getBooleanVectorAsList not null!")
callback("setBooleanVectorAsList",getBooleanVectorAsList)
val getBooleanMatrix: Array[Array[Boolean]] = callback("getBooleanMatrix")
if(getBooleanMatrix != null)
	throw new Exception("getBooleanMatrix not null!")
callback("setBooleanMatrix",getBooleanMatrix)
val getBooleanMatrixAsList: Array[Array[Boolean]] = callback("getBooleanMatrixAsList")
if(getBooleanMatrixAsList != null)
	throw new Exception("getBooleanMatrixAsList not null!")
callback("setBooleanMatrixAsList",getBooleanMatrixAsList)

val getByteVector: Array[Byte] = callback("getByteVector")
if(getByteVector != null)
	throw new Exception("getByteVector not null!")
callback("setByteVector",getByteVector)
val getByteVectorAsList: Array[Byte] = callback("getByteVectorAsList")
if(getByteVectorAsList != null)
	throw new Exception("getByteVectorAsList not null!")
callback("setByteVectorAsList",getByteVectorAsList)
val getByteMatrix: Array[Array[Byte]] = callback("getByteMatrix")
if(getByteMatrix != null)
	throw new Exception("getByteMatrix not null!")
callback("setByteMatrix",getByteMatrix)
val getByteMatrixAsList: Array[Array[Byte]] = callback("getByteMatrixAsList")
if(getByteMatrixAsList != null)
	throw new Exception("getByteMatrixAsList not null!")
callback("setByteMatrixAsList",getByteMatrixAsList)

val getCharacterVector: Array[Char] = callback("getCharacterVector")
if(getCharacterVector != null)
	throw new Exception("getCharacterVector not null!")
callback("setCharacterVector",getCharacterVector)
val getCharacterVectorAsList: Array[Char] = callback("getCharacterVectorAsList")
if(getCharacterVectorAsList != null)
	throw new Exception("getCharacterVectorAsList not null!")
callback("setCharacterVectorAsList",getCharacterVectorAsList)
val getCharacterMatrix: Array[Array[Char]] = callback("getCharacterMatrix")
if(getCharacterMatrix != null)
	throw new Exception("getCharacterMatrix not null!")
callback("setCharacterMatrix",getCharacterMatrix)
val getCharacterMatrixAsList: Array[Array[Char]] = callback("getCharacterMatrixAsList")
if(getCharacterMatrixAsList != null)
	throw new Exception("getCharacterMatrixAsList not null!")
callback("setCharacterMatrixAsList",getCharacterMatrixAsList)

val getDecimalVector: Array[Double] = callback("getDecimalVector")
if(getDecimalVector != null)
	throw new Exception("getDecimalVector not null!")
callback("setDecimalVector",getDecimalVector)
val getDecimalVectorAsList: Array[Double] = callback("getDecimalVectorAsList")
if(getDecimalVectorAsList != null)
	throw new Exception("getDecimalVectorAsList not null!")
callback("setDecimalVectorAsList",getDecimalVectorAsList)
val getDecimalMatrix: Array[Array[Double]] = callback("getDecimalMatrix")
if(getDecimalMatrix != null)
	throw new Exception("getDecimalMatrix not null!")
callback("setDecimalMatrix",getDecimalMatrix)
val getDecimalMatrixAsList: Array[Array[Double]] = callback("getDecimalMatrixAsList")
if(getDecimalMatrixAsList != null)
	throw new Exception("getDecimalMatrixAsList not null!")
callback("setDecimalMatrixAsList",getDecimalMatrixAsList)

val getDoubleVector: Array[Double] = callback("getDoubleVector")
if(getDoubleVector != null)
	throw new Exception("getDoubleVector not null!")
callback("setDoubleVector",getDoubleVector)
val getDoubleVectorAsList: Array[Double] = callback("getDoubleVectorAsList")
if(getDoubleVectorAsList != null)
	throw new Exception("getDoubleVectorAsList not null!")
callback("setDoubleVectorAsList",getDoubleVectorAsList)
val getDoubleMatrix: Array[Array[Double]] = callback("getDoubleMatrix")
if(getDoubleMatrix != null)
	throw new Exception("getDoubleMatrix not null!")
callback("setDoubleMatrix",getDoubleMatrix)
val getDoubleMatrixAsList: Array[Array[Double]] = callback("getDoubleMatrixAsList")
if(getDoubleMatrixAsList != null)
	throw new Exception("getDoubleMatrixAsList not null!")
callback("setDoubleMatrixAsList",getDoubleMatrixAsList)

val getFloatVector: Array[Float] = callback("getFloatVector")
if(getFloatVector != null)
	throw new Exception("getFloatVector not null!")
callback("setFloatVector",getFloatVector)
val getFloatVectorAsList: Array[Float] = callback("getFloatVectorAsList")
if(getFloatVectorAsList != null)
	throw new Exception("getFloatVectorAsList not null!")
callback("setFloatVectorAsList",getFloatVectorAsList)
val getFloatMatrix: Array[Array[Float]] = callback("getFloatMatrix")
if(getFloatMatrix != null)
	throw new Exception("getFloatMatrix not null!")
callback("setFloatMatrix",getFloatMatrix)
val getFloatMatrixAsList: Array[Array[Float]] = callback("getFloatMatrixAsList")
if(getFloatMatrixAsList != null)
	throw new Exception("getFloatMatrixAsList not null!")
callback("setFloatMatrixAsList",getFloatMatrixAsList)

val getIntegerVector: Array[Int] = callback("getIntegerVector")
if(getIntegerVector != null)
	throw new Exception("getIntegerVector not null!")
callback("setIntegerVector",getIntegerVector)
val getIntegerVectorAsList: Array[Int] = callback("getIntegerVectorAsList")
if(getIntegerVectorAsList != null)
	throw new Exception("getIntegerVectorAsList not null!")
callback("setIntegerVectorAsList",getIntegerVectorAsList)
val getIntegerMatrix: Array[Array[Int]] = callback("getIntegerMatrix")
if(getIntegerMatrix != null)
	throw new Exception("getIntegerMatrix not null!")
callback("setIntegerMatrix",getIntegerMatrix)
val getIntegerMatrixAsList: Array[Array[Int]] = callback("getIntegerMatrixAsList")
if(getIntegerMatrixAsList != null)
	throw new Exception("getIntegerMatrixAsList not null!")
callback("setIntegerMatrixAsList",getIntegerMatrixAsList)

val getLongVector: Array[Long] = callback("getLongVector")
if(getLongVector != null)
	throw new Exception("getLongVector not null!")
callback("setLongVector",getLongVector)
val getLongVectorAsList: Array[Long] = callback("getLongVectorAsList")
if(getLongVectorAsList != null)
	throw new Exception("getLongVectorAsList not null!")
callback("setLongVectorAsList",getLongVectorAsList)
val getLongMatrix: Array[Array[Long]] = callback("getLongMatrix")
if(getLongMatrix != null)
	throw new Exception("getLongMatrix not null!")
callback("setLongMatrix",getLongMatrix)
val getLongMatrixAsList: Array[Array[Long]] = callback("getLongMatrixAsList")
if(getLongMatrixAsList != null)
	throw new Exception("getLongMatrixAsList not null!")
callback("setLongMatrixAsList",getLongMatrixAsList)

val getPercentVector: Array[Double] = callback("getPercentVector")
if(getPercentVector != null)
	throw new Exception("getPercentVector not null!")
callback("setPercentVector",getPercentVector)
val getPercentVectorAsList: Array[Double] = callback("getPercentVectorAsList")
if(getPercentVectorAsList != null)
	throw new Exception("getPercentVectorAsList not null!")
callback("setPercentVectorAsList",getPercentVectorAsList)
val getPercentMatrix: Array[Array[Double]] = callback("getPercentMatrix")
if(getPercentMatrix != null)
	throw new Exception("getPercentMatrix not null!")
callback("setPercentMatrix",getPercentMatrix)
val getPercentMatrixAsList: Array[Array[Double]] = callback("getPercentMatrixAsList")
if(getPercentMatrixAsList != null)
	throw new Exception("getPercentMatrixAsList not null!")
callback("setPercentMatrixAsList",getPercentMatrixAsList)

val getShortVector: Array[Short] = callback("getShortVector")
if(getShortVector != null)
	throw new Exception("getShortVector not null!")
callback("setShortVector",getShortVector)
val getShortVectorAsList: Array[Short] = callback("getShortVectorAsList")
if(getShortVectorAsList != null)
	throw new Exception("getShortVectorAsList not null!")
callback("setShortVectorAsList",getShortVectorAsList)
val getShortMatrix: Array[Array[Short]] = callback("getShortMatrix")
if(getShortMatrix != null)
	throw new Exception("getShortMatrix not null!")
callback("setShortMatrix",getShortMatrix)
val getShortMatrixAsList: Array[Array[Short]] = callback("getShortMatrixAsList")
if(getShortMatrixAsList != null)
	throw new Exception("getShortMatrixAsList not null!")
callback("setShortMatrixAsList",getShortMatrixAsList)

val getStringVector: Array[String] = callback("getStringVector")
if(getStringVector != null)
	throw new Exception("getStringVector not null!")
callback("setStringVector",getStringVector)
val getStringVectorAsList: Array[String] = callback("getStringVectorAsList")
if(getStringVectorAsList != null)
	throw new Exception("getStringVectorAsList not null!")
callback("setStringVectorAsList",getStringVectorAsList)
val getStringMatrix: Array[Array[String]] = callback("getStringMatrix")
if(getStringMatrix != null)
	throw new Exception("getStringMatrix not null!")
callback("setStringMatrix",getStringMatrix)
val getStringMatrixAsList: Array[Array[String]] = callback("getStringMatrixAsList")
if(getStringMatrixAsList != null)
	throw new Exception("getStringMatrixAsList not null!")
callback("setStringMatrixAsList",getStringMatrixAsList)
